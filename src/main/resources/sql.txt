CREATE TABLE IF NOT EXISTS mk_101_jdbc.permission_tbl
(
id bigint NOT NULL,
name character varying(255) COLLATE pg_catalog."default" NOT NULL,
CONSTRAINT permission_tbl_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS mk_101_jdbc.permission_tbl
OWNER to postgres;

CREATE TABLE IF NOT EXISTS mk_101_jdbc.role_tbl
(
id bigint NOT NULL,
name character varying(255) COLLATE pg_catalog."default" NOT NULL,
CONSTRAINT role_tbl_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS mk_101_jdbc.role_tbl
OWNER to postgres;

CREATE TABLE IF NOT EXISTS mk_101_jdbc.user_tbl
(
id bigint NOT NULL,
first_name character varying(255) COLLATE pg_catalog."default",
last_name character varying(255) COLLATE pg_catalog."default",
username character varying(255) COLLATE pg_catalog."default",
password character varying(255) COLLATE pg_catalog."default",
dtype character varying(255) COLLATE pg_catalog."default",
email character varying(255) COLLATE pg_catalog."default",
national_code character varying(255) COLLATE pg_catalog."default",
address character varying(255) COLLATE pg_catalog."default",
is_super_admin boolean,
CONSTRAINT user_tbl_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS mk_101_jdbc.user_tbl
OWNER to postgres;

CREATE TABLE IF NOT EXISTS mk_101_jdbc.roles_permissions
(
role_id bigint NOT NULL,
permission_id bigint NOT NULL,
CONSTRAINT roles_permissions_pkey PRIMARY KEY (role_id, permission_id),
CONSTRAINT roles_permissions_permission_id_fk FOREIGN KEY (permission_id)
REFERENCES mk_101_jdbc.permission_tbl (id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION,
CONSTRAINT roles_permissions_role_id_fk FOREIGN KEY (role_id)
REFERENCES mk_101_jdbc.role_tbl (id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS mk_101_jdbc.roles_permissions
OWNER to postgres;

CREATE TABLE IF NOT EXISTS mk_101_jdbc.users_roles
(
user_id bigint NOT NULL,
role_id bigint NOT NULL,
CONSTRAINT users_roles_pkey PRIMARY KEY (user_id, role_id),
CONSTRAINT users_roles_role_id_fk FOREIGN KEY (role_id)
REFERENCES mk_101_jdbc.role_tbl (id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION,
CONSTRAINT users_roles_user_id_fk FOREIGN KEY (user_id)
REFERENCES mk_101_jdbc.user_tbl (id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS mk_101_jdbc.users_roles
OWNER to postgres;